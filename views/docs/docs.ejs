<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Szkoła Podstawowa nr. 1 w Morzeszczynie</title>

    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css" />

    <link
	rel="stylesheet"
	href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css"
    />

    <script src="/js/bootstrap.js"></script>
</head>
<body class="d-flex flex-column min-vh-100">
    <%- include("../navbar.ejs"); %>

    <header class="container text-center d-flex flex-column align-items-center mt-5">
        <h3 class="display-3 mt-5">
            Dokumenty szkoły
        </h3>

    </header>

    <h4 class="display-4 mt-5 text-center">
        Statut Szkoły
    </h4>



    <div class="container">
        <ul
            class="
      nav nav-tabs
      d-flex
      justify-content-between
      align-items-center
      text-dark
      p-3">
            <li class="nav-item">
                <a
                    href="#"
                    class="p-1 border rounded-circle"
                    id="prev_page"
                    title="previous page"
                    data-bs-toggle="tooltip"
                    data-bs-placement="bottom">
                    <i class="bi bi-chevron-left"></i>
                </a>

                <input
                    type="number"
                    id="current_page"
                    value="1"
                    class="d-inline form-control"
                />

                <a
                    href="#"
                    class="p-1 border rounded-circle"
                    id="next_page"
                    data-bs-toggle="tooltip"
                    data-bs-placement="bottom"
                    title="next page"
                >
                    <i class="bi bi-chevron-right"></i>
                </a>

                <!-- page 1 of 5 -->
                Page
                <span id="page_num"></span>
                of
                <span id="page_count"></span>
            </li>

            <li class="nav-item">
                <button
                    class="rounded-circle p-2 border-0 btn btn-primary"
                    id="zoom_in"
                    data-bs-toggle="tooltip"
                    data-bs-placement="bottom"
                    title="zoom in"
                >
                    <i class="bi bi-zoom-in"></i>
                </button>

                <button
                    class="rounded-circle p-2 border-0 btn btn-primary"
                    id="zoom_out"
                    data-bs-toggle="tooltip"
                    data-bs-placement="bottom"
                    title="zoom out"
                >
                    <i class="bi bi-zoom-out"></i>
                </button>
            </li>
        </ul>

        <!-- canvas to place the PDF -->
        <canvas
            id="canvas"
            class="
      d-flex
      flex-column
      justify-content-center
      align-items-center
      mx-auto
    "
        ></canvas>
    </div>

    <!-- PDF.js CDN -->
    <script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@2.10.377/build/pdf.min.js"></script>

    <!-- Bootstap JavaScript and Popper.js -->
    <script
        src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
        integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
        crossorigin="anonymous"
    ></script>
    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
        integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
        crossorigin="anonymous"
    ></script>

    <!-- Custom javascript file -->
    <script>
const pdf = 'document.pdf';

const pageNum = document.querySelector('#page_num');
const pageCount = document.querySelector('#page_count');
const currentPage = document.querySelector('#current_page');
const previousPage = document.querySelector('#prev_page');
const nextPage = document.querySelector('#next_page');
const zoomIn = document.querySelector('#zoom_in');
const zoomOut = document.querySelector('#zoom_out');

const initialState = {
	pdfDoc: null,
	currentPage: 1,
	pageCount: 0,
	zoom: 1,
};

// Render the page.
const renderPage = () => {
	// Load the first page.
	initialState.pdfDoc
		.getPage(initialState.currentPage)
		.then((page) => {
			console.log('page', page);

			const canvas = document.querySelector('#canvas');
			const ctx = canvas.getContext('2d');
			const viewport = page.getViewport({
				scale: initialState.zoom,
			});

			canvas.height = viewport.height;
			canvas.width = viewport.width;

			// Render the PDF page into the canvas context.
			const renderCtx = {
				canvasContext: ctx,
				viewport: viewport,
			};

			page.render(renderCtx);

			pageNum.textContent = initialState.currentPage;
		});
};

// Load the document.
pdfjsLib
	.getDocument(pdf)
	.promise.then((data) => {
		initialState.pdfDoc = data;
		console.log('pdfDocument', initialState.pdfDoc);

		pageCount.textContent = initialState.pdfDoc.numPages;

		renderPage();
	})
	.catch((err) => {
		alert(err.message);
	});

const showPrevPage = () => {
	if (initialState.pdfDoc === null || initialState.currentPage <= 1)
		return;
	initialState.currentPage--;
	// Render the current page.
	currentPage.value = initialState.currentPage;
	renderPage();
};

const showNextPage = () => {
	if (
		initialState.pdfDoc === null ||
		initialState.currentPage >= initialState.pdfDoc._pdfInfo.numPages
	)
		return;

	initialState.currentPage++;
	currentPage.value = initialState.currentPage;
	renderPage();
};

// Button events.
previousPage.addEventListener('click', showPrevPage);
nextPage.addEventListener('click', showNextPage);

// Keypress event.
currentPage.addEventListener('keypress', (event) => {
	if (initialState.pdfDoc === null) return;
	// Get the key code.
	const keycode = event.keyCode ? event.keyCode : event.which;

	if (keycode === 13) {
		// Get the new page number and render it.
		let desiredPage = currentPage.valueAsNumber;
		initialState.currentPage = Math.min(
			Math.max(desiredPage, 1),
			initialState.pdfDoc._pdfInfo.numPages,
		);
		currentPage.value = initialState.currentPage;
		renderPage();
	}
});

// Zoom events.
zoomIn.addEventListener('click', () => {
	if (initialState.pdfDoc === null) return;
	initialState.zoom *= 4 / 3;
	renderPage();
});

zoomOut.addEventListener('click', () => {
	if (initialState.pdfDoc === null) return;
	initialState.zoom *= 2 / 3;
	renderPage();
});

// Tooltip.
const tooltipTriggerList = [].slice.call(
	document.querySelectorAll('[data-bs-toggle="tooltip"]'),
);
const tooltipList = tooltipTriggerList.map((tooltipTriggerEl) => {
	return new bootstrap.Tooltip(tooltipTriggerEl);
});
    </script>

    
 
    <%- include("../footer.ejs"); %>

</body>
</html>
